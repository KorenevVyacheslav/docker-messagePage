server {

    listen 81;
    #server_name myloc.loc;

    # где nginx будет искать файлы в контейнере fpm
    root /www/public;

    #стартовый файл
    index index.html index.php;

    error_log   /var/log/nginx/www_error.log;
    access_log   /var/log/nginx/www_access.log;
    # кодировка для всего контента, обслуживаемого web-сервером
    # чтобы контент отображался правильно на разных устройствах и в браузерах. 
    charset utf-8;

    # будет отрабатывать при вводе основного адреса. Для корневого URI «/»
    # любые запросы к нашему сайту по любому пути будут перебраываться в index.html а дальнейшие роуты подхватывает
       location / {
        try_files $uri $uri/ /index.php?$query_string;
        # kill cache
    }

    # если nginx встратит ошибку 404 он переадресует на этот URI
    error_page 404 /index.php;

    # www.site.ru/somepage/some.php/afterphp  здесь uri это /somepage        $uri
    # правило обращения к php-fpm
    #   ~ performs a case-sensitive match
    #   ~* performs a case-insensitive match

    # ~ говорит Nginx, что используется регулярное выражение для сопоставления запросов.
    # ~ — сопоставление с учётом регистра.
    # \.php$
    #Это регулярное выражение:
    #\. — экранированная точка (. в регулярных выражениях означает любой символ, поэтому для точки как символа её нужно экранировать).
    #php — ищем строки, которые содержат php сразу после точки.
    # $ — указывает на конец строки. Это означает, что шаблон будет соответствовать только строкам, которые заканчиваются на .php.

    location ~ \.php$ {
        fastcgi_split_path_info ^(.+.php)(/.+)$;    #разбиваем строку на до *.php и после
        fastcgi_pass php-fpm:9000;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;   # переменная в которой хранится путь до *.php
        fastcgi_param PATH_INFO $fastcgi_path_info;
        include fastcgi_params;                                             # переменная в которой хранится путь после *.php (/afterphp)
    }

}